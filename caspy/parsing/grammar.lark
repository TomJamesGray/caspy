?start:expr
    | NAME ":=" expr -> def_expr

?expr: sum
    | expr "=" sum -> equality

?sum: product
    | sum "+" product -> add
    | sum "-" product -> sub

?product:negation
    | product "*" power -> mul
    | product "/" power -> div

?negation:power
    | "-" power -> neg

?power:atom
    | power "^" atom -> pow

?atom: NAME "(" paramaters? ")" -> func_call
    | "[" paramaters? "]" -> gen_arr
    | NUMBER -> number
    | "(" sum ")"
    | /("([^"]|"")*")+/ -> string
    | NAME -> sym



paramaters: (paramvalue ("," paramvalue)* ("," kwargs)* | kwargs ("," kwargs)* )

kwargs: NAME "=" (atom | sum)

paramvalue:atom | sum

%import common.NUMBER
%import common.WS_INLINE
%import common.CNAME -> NAME

%ignore WS_INLINE